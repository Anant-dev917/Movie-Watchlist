/*These are CSS variables which can be used instead of assigning values to CSS properties; CSS variables, like any variables, are user defined*/
/*CSS variables are applicable to the current element and it's child elements*/
/*Below sets of variables are applicable to the root element (HTML element, but with higher specificity)*/
:root {
    /*CSS variables are declared with "--" symbols followed by variable name*/
    --text-dark: #000;
    --text-light: #fbf2f2;
    --text-muted: #595959;
  
    --background-color: #fff;
    --accent-colour: #f56565;
    --accent-colour-2: #3bb54a;
    --tag-colour: #e5e5e5;
  
    --border: 3px solid #000;
  }

:root.dark-mode{
  --text-dark: #fbf2f2;
  --text-light: #000;
  --text-muted: #595959;

  --background-color: #1c2023;
  --accent-colour: #f56565;
  --accent-colour-2: #3bb54a;
  --tag-colour: var(--accent-colour-2);

  --border: 3px solid #fff;
}
  
  /*Any HTML element assumes the value of the CSS variable of it's closest parent*/
  /*Here, any child element of button will assume the "--background-color" value of ".button" selector, even though ":root" has different value for the same variable */
  .button {
    --background-color: #e2e8f0;
    --background-color-hover: #bdd1eb;
  }
  
  .form__field {
    --background-color: #e8e5e5;
  }
  
  .form__field,
  .nav__link {
    --border: 3px solid #f56565;
  }

  html {
    /* Sets global font size on small devices */
    font-size: 12px;
  }
  
  /* When the screen width hits 960px, we increase the global font size to 14px. This changes
     the scale of all of our relative units (the rems), keeping everything in proportion */
  @media screen and (min-width: 60em) {
    html {
      font-size: 14px;
    }
  }
  
  /* When the screen width hits 1200px, we once again increase the global font size, this time to 16px */
  @media screen and (min-width: 75em) {
    html {
      font-size: 18px;
    }
  }
  
  body {
    /* Sets the shared font characteristics, so that that they can be inherited globally */
    font-family: "Public Sans", sans-serif;
    color: var(--text-dark);
    line-height: 1.45;
    background-color: var(--background-color);
    display: flex;
    flex-direction: column;
  }

  .header{
    padding: 0 2rem;
    border-bottom: var(--border);
  }

  .header__logo{
    display: flex;
    align-items: center;
    height: 4rem;
    color: inherit;
    text-decoration: none;
    transition: color 0.1s ease-in-out;
  }

  .header__logo:hover{
    color: var(--accent-colour);
  }

  .logo__icon{
    width: 2.5rem;
    height: 2.5rem;
  }

  .logo__name{
    margin-left: 0.5rem;
    text-transform: uppercase;
    font-weight: 600;
    font-size: 20px;
  }

  .nav-container{
    display: flex;
    justify-content: space-between;
    max-width: 75rem;
    margin: 0 auto;
  }

  .nav{
    display: flex;
  }

  .nav__link{
    padding: 0 0.5rem;
    display: flex;
    align-items: center;
    text-decoration: none;
    color: inherit;
    transition: border-bottom 90ms ease-in-out;
  }

  .nav__link--active{
    background-color: var(--accent-colour);
    color: var(--text-light);
  }

  .nav__link:not(:last-child){
    margin-right: 1rem;
  }

  .nav__link:hover{
    /*This raises the nav link's margin above the existing header bar's border by 3px, so that the hovering border doesn't overlap with the header border*/
    margin-bottom: -3px;
    border-bottom: var(--border);
  }

  .nav__item{
    text-transform: uppercase;
    font-weight: 600;
    letter-spacing: 1px;
  }

  .nav__icon{
    width: 1em;
    height: 1em;
  }

  .main{
    flex-grow: 1;
    padding: 3rem 1.5rem 2rem 1.5rem;
  }

  @media screen and (min-width: 30em){
    .main{
      padding-top: 5rem;
    }
  }

  .footer{
    padding: 1rem 0;
    color: var(--text-muted);
    text-align: center;
  }

  
  /* Button styles that we'll share across our site */
  .button {
    /* In order to easily position our buttons, we're making them block level elements */
    display: block;
  
    /* Removes any outlines added when the button is in focus */
    outline: none;
  
    /* Setting the cursor to pointer indicates to a user that the button is a clickable element */
    cursor: pointer;
  
    /* Again, with buttons we have to be explicit about inheriting font properties */
    font-size: inherit;
    font-family: inherit;
  
    /* Slows the background colour change effect when we hover over the button, making
         it take 0.1s with an accelerating colour change */
    transition: var(--background-color) 0.1s ease-in;
  }
  
  /* Utility class to use on links within text. */
  .link {
    text-decoration: none;
    color: var(--accent-colour);
    white-space: nowrap;
  }
  
  .link:hover {
    text-decoration: underline;
  }